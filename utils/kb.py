from aiogram.types import ReplyKeyboardMarkup, KeyboardButton, InlineKeyboardMarkup, InlineKeyboardButton
from utils.plugins import tags  # –ü–ï–†–ï–ù–ï–° –°–ü–ò–°–û–ö –¢–ï–ì–û–í –¢–£–î–ê


####################################################
# Backs

back_main_menu = InlineKeyboardMarkup().row(
    InlineKeyboardButton('‚¨ÖÔ∏è –ù–∞–∑–∞–¥ –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é', callback_data='back_to::main_menu')
)

back_to_orders = InlineKeyboardMarkup().row(
    InlineKeyboardButton('‚¨Öüö™ –ù–∞–∑–∞–¥ –∫ —Å–ø–∏—Å–∫—É –∑–∞–∫–∞–∑–æ–≤', callback_data='back_to::orders')
)

# Backs
####################################################

####################################################
# Registration

phone_verification = ReplyKeyboardMarkup(resize_keyboard=True, one_time_keyboard=True).add(
    KeyboardButton('‚úÖ –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞', request_contact=True)
)

role_picker = InlineKeyboardMarkup(row_width=1).add(
    InlineKeyboardButton("üíº –Ø –∑–∞–∫–∞–∑—á–∏–∫", callback_data="pick::client"),
    InlineKeyboardButton("üßë‚Äçüíª –Ø –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—å", callback_data="pick::performer"),
)

# Registration
####################################################

####################################################
# Functions


async def get_main_menu(role: str):
    markup = InlineKeyboardMarkup(row_width=2).add(
        InlineKeyboardButton("üõí –ë–∏—Ä–∂–∞ –∑–∞–∫–∞–∑–æ–≤ (–≤—Å–µ –∑–∞–∫–∞–∑—ã)", callback_data="view_all_orders"),
        InlineKeyboardButton("üë§ –ú–æ–π –ø—Ä–æ—Ñ–∏–ª—å", callback_data="go::profile"),
        InlineKeyboardButton("‚ùì –ß–∞–≤–æ", callback_data="go::faq"),
        InlineKeyboardButton("üìï –ü—Ä–∞–≤–∏–ª–∞ —Å–µ—Ä–≤–∏—Å–∞", callback_data="go::rules"),
        InlineKeyboardButton("üìã –°–æ–∑–¥–∞—Ç—å –∑–∞–∫–∞–∑", callback_data="create_order"),
        InlineKeyboardButton("‚≠ê –ò–∑–±—Ä–∞–Ω–Ω—ã–µ –∑–∞–∫–∞–∑—ã", callback_data='view_favorite_orders'),
        InlineKeyboardButton("üìà –ü–æ–¥–Ω—è—Ç—å –∑–∞–∫–∞–∑", callback_data='raise_order'),
    )
    return markup


async def get_profile_menu(role: str):
    markup = InlineKeyboardMarkup(row_width=2).row(
        InlineKeyboardButton("üîÅ –°—Ç–∞—Ç—å –ò—Å–ø–æ–ª–Ω–∏—Ç–µ–ª–µ–º", callback_data="switch_role::performer")
            if role == 'client' else
        InlineKeyboardButton("üîÅ –°—Ç–∞—Ç—å –ó–∞–∫–∞–∑—á–∏–∫–æ–º", callback_data="switch_role::client")
    ).add(
        InlineKeyboardButton("üì• –ü–æ–ø–æ–ª–Ω–∏—Ç—å", callback_data='balance::topup'),
        InlineKeyboardButton("üì§ –í—ã–≤–µ—Å—Ç–∏", callback_data='balance::withdraw')
    ).row(
        InlineKeyboardButton("‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–∏—Ç—å –ø—Ä–æ—Ñ–∏–ª—å", callback_data='profile::settings')
    )

    return markup


def create_profile_keyboard():
    keyboard = InlineKeyboardMarkup(row_width=2)
    keyboard.add(
        InlineKeyboardButton('–ú–æ–∏ –∑–∞–∫–∞–∑—ã', callback_data='user_orders'),
        InlineKeyboardButton('‚¨ÖÔ∏è –ù–∞–∑–∞–¥ –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é', callback_data='back_to::main_menu')
    )
    return keyboard


def create_responses_keyboard(order_id, feedbacks):
    keyboard = InlineKeyboardMarkup(row_width=2)
    for feedback in feedbacks:
        keyboard.add(
            InlineKeyboardButton('–ü—Ä–∏–Ω—è—Ç—å', callback_data=f'accept_response_{feedback.id}'),
            InlineKeyboardButton('–û—Ç–∫–ª–æ–Ω–∏—Ç—å', callback_data=f'reject_response_{feedback.id}')
        )
    keyboard.add(InlineKeyboardButton('‚¨ÖÔ∏è –ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é', callback_data='back_to::main_menu'))
    return keyboard


def create_order_details_keyboard(order_id, is_own_order=False, is_favorite=False):
    keyboard = InlineKeyboardMarkup(row_width=1)
    if is_own_order:
        keyboard.add(
            InlineKeyboardButton('–ü—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å –æ—Ç–∫–ª–∏–∫–∏', callback_data=f'view_responses_{order_id}')
        )
    keyboard.add(
        InlineKeyboardButton(
            '–£–¥–∞–ª–∏—Ç—å –∏–∑ –∏–∑–±—Ä–∞–Ω–Ω–æ–≥–æ' if is_favorite else '–î–æ–±–∞–≤–∏—Ç—å –≤ –∏–∑–±—Ä–∞–Ω–Ω–æ–µ',
            callback_data=f'add_to_favorites_{order_id}'
        ),
        InlineKeyboardButton('‚¨ÖÔ∏è –ù–∞–∑–∞–¥ –∫ —Å–ø–∏—Å–∫—É –∑–∞–∫–∞–∑–æ–≤', callback_data='back_to::orders')
    )
    if is_own_order:
        keyboard.add(
            InlineKeyboardButton('‚úèÔ∏è –ò–∑–º–µ–Ω–∏—Ç—å –∑–∞–∫–∞–∑', callback_data=f'edit_order_{order_id}'),
            InlineKeyboardButton('üóëÔ∏è –£–¥–∞–ª–∏—Ç—å –∑–∞–∫–∞–∑', callback_data=f'delete_order_{order_id}')
        )
    return keyboard


def create_favorite_orders_keyboard(orders, page, total_pages):
    keyboard = InlineKeyboardMarkup(row_width=1)
    for order in orders:
        keyboard.add(InlineKeyboardButton(f"–ó–∞–∫–∞–∑: {order.title}", callback_data=f"select_order_{order.id}"))

    nav_buttons = []
    if page > 1:
        nav_buttons.append(InlineKeyboardButton('‚¨ÖÔ∏è –ù–∞–∑–∞–¥', callback_data=f'favorite_orders_page_{page - 1}'))
    if page < total_pages:
        nav_buttons.append(InlineKeyboardButton('‚û°Ô∏è –í–ø–µ—Ä–µ–¥', callback_data=f'favorite_orders_page_{page + 1}'))

    keyboard.row(*nav_buttons)
    keyboard.add(InlineKeyboardButton('‚¨ÖÔ∏è –ù–∞–∑–∞–¥ –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é', callback_data='back_to::main_menu'))
    return keyboard


def create_orders_keyboard(orders, page, total_pages):
    keyboard = InlineKeyboardMarkup(row_width=1)
    for order in orders:
        keyboard.add(InlineKeyboardButton(f"–ó–∞–∫–∞–∑: {order.title}", callback_data=f"select_order_{order.id}"))

    nav_buttons = []
    if page > 1:
        nav_buttons.append(InlineKeyboardButton('‚¨ÖÔ∏è –ù–∞–∑–∞–¥', callback_data=f'page_{page - 1}'))
    if page < total_pages:
        nav_buttons.append(InlineKeyboardButton('‚û°Ô∏è –í–ø–µ—Ä–µ–¥', callback_data=f'page_{page + 1}'))

    keyboard.row(*nav_buttons)
    keyboard.add(InlineKeyboardButton('‚¨ÖÔ∏è –ù–∞–∑–∞–¥ –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é', callback_data='back_to::main_menu'))
    keyboard.add(InlineKeyboardButton("üîç –ü–æ–∏—Å–∫ –ø–æ —Ç–µ–≥–∞–º", callback_data='filter_orders'))
    return keyboard


def create_user_orders_keyboard(orders, page, total_pages):
    keyboard = InlineKeyboardMarkup(row_width=1)
    for order in orders:
        keyboard.add(InlineKeyboardButton(f"–ó–∞–∫–∞–∑: {order.title}", callback_data=f"select_order_{order.id}"))

    nav_buttons = []
    if total_pages >= 1:
        if page > 1:
            nav_buttons.append(InlineKeyboardButton(' –ù–∞–∑–∞–¥', callback_data=f'user_orders_page_{page - 1}'))
        if page < total_pages:
            nav_buttons.append(InlineKeyboardButton('‚û°Ô∏è –í–ø–µ—Ä–µ–¥', callback_data=f'user_orders_page_{page + 1}'))

    keyboard.row(*nav_buttons)
    keyboard.add(InlineKeyboardButton('‚¨ÖÔ∏è –ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é', callback_data='back_to::main_menu'))
    return keyboard

########################################################################################
# —Ç–µ–≥–∏
########################################################################################


def create_tags_keyboard(selected_tags):
    keyboard = InlineKeyboardMarkup(row_width=1)
    for tag_name, tag_code in tags.items():
        button_text = f"‚úÖ {tag_name}" if tag_code in selected_tags else tag_name
        keyboard.add(InlineKeyboardButton(button_text, callback_data=f"tag::{tag_code}"))

    keyboard.add(InlineKeyboardButton('–ì–æ—Ç–æ–≤–æ', callback_data='tags_done'))
    return keyboard

# def create_order_details_keyboard(order_id, is_own_order=False):
#     keyboard = InlineKeyboardMarkup(row_width=1)
#     keyboard.add(
#         InlineKeyboardButton('–ü—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å –æ—Ç–∫–ª–∏–∫–∏', callback_data=f'view_responses_{order_id}'),
#         InlineKeyboardButton('–î–æ–±–∞–≤–∏—Ç—å –≤ –∏–∑–±—Ä–∞–Ω–Ω–æ–µ', callback_data=f'add_to_favorites_{order_id}'),
#         InlineKeyboardButton('‚¨ÖÔ∏è –ù–∞–∑–∞–¥ –∫ —Å–ø–∏—Å–∫—É –∑–∞–∫–∞–∑–æ–≤', callback_data='back_to::orders')
#     )
#     if is_own_order:
#         keyboard.add(
#             InlineKeyboardButton('‚úèÔ∏è –ò–∑–º–µ–Ω–∏—Ç—å –∑–∞–∫–∞–∑', callback_data=f'edit_order_{order_id}'),
#             InlineKeyboardButton('üóëÔ∏è –£–¥–∞–ª–∏—Ç—å –∑–∞–∫–∞–∑', callback_data=f'delete_order_{order_id}')
#         )
#
#     return keyboard

# Functions
####################################################
